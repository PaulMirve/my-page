import classNames from "classnames";
import { FC, SVGProps } from "react";
import styles from "@sass/components/icon.module.scss";
import { Color } from "@_types/Color";
import { useGetColor } from "@hooks/useGetColor";

export type IconName =
  | "document"
  | "github"
  | "github-filled"
  | "moon"
  | "sun"
  | "caret-right"
  | "code"
  | "linkedin"
  | "codepen";

const GithubFilled = ({ ...props }: SVGProps<SVGSVGElement>) => {
  return (
    <svg viewBox="0 0 128 128" {...props}>
      <g fill="currentColor">
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M64 5.103c-33.347 0-60.388 27.035-60.388 60.388 0 26.682 17.303 49.317 41.297 57.303 3.017.56 4.125-1.31 4.125-2.905 0-1.44-.056-6.197-.082-11.243-16.8 3.653-20.345-7.125-20.345-7.125-2.747-6.98-6.705-8.836-6.705-8.836-5.48-3.748.413-3.67.413-3.67 6.063.425 9.257 6.223 9.257 6.223 5.386 9.23 14.127 6.562 17.573 5.02.542-3.903 2.107-6.568 3.834-8.076-13.413-1.525-27.514-6.704-27.514-29.843 0-6.593 2.36-11.98 6.223-16.21-.628-1.52-2.695-7.662.584-15.98 0 0 5.07-1.623 16.61 6.19C53.7 35 58.867 34.327 64 34.304c5.13.023 10.3.694 15.127 2.033 11.526-7.813 16.59-6.19 16.59-6.19 3.287 8.317 1.22 14.46.593 15.98 3.872 4.23 6.215 9.617 6.215 16.21 0 23.194-14.127 28.3-27.574 29.796 2.167 1.874 4.097 5.55 4.097 11.183 0 8.08-.07 14.583-.07 16.572 0 1.607 1.088 3.49 4.148 2.897 23.98-7.994 41.263-30.622 41.263-57.294C124.388 32.14 97.35 5.104 64 5.104z"></path>
        <path d="M26.484 91.806c-.133.3-.605.39-1.035.185-.44-.196-.685-.605-.543-.906.13-.31.603-.395 1.04-.188.44.197.69.61.537.91zm2.446 2.729c-.287.267-.85.143-1.232-.28-.396-.42-.47-.983-.177-1.254.298-.266.844-.14 1.24.28.394.426.472.984.17 1.255zM31.312 98.012c-.37.258-.976.017-1.35-.52-.37-.538-.37-1.183.01-1.44.373-.258.97-.025 1.35.507.368.545.368 1.19-.01 1.452zm3.261 3.361c-.33.365-1.036.267-1.552-.23-.527-.487-.674-1.18-.343-1.544.336-.366 1.045-.264 1.564.23.527.486.686 1.18.333 1.543zm4.5 1.951c-.147.473-.825.688-1.51.486-.683-.207-1.13-.76-.99-1.238.14-.477.823-.7 1.512-.485.683.206 1.13.756.988 1.237zm4.943.361c.017.498-.563.91-1.28.92-.723.017-1.308-.387-1.315-.877 0-.503.568-.91 1.29-.924.717-.013 1.306.387 1.306.88zm4.598-.782c.086.485-.413.984-1.126 1.117-.7.13-1.35-.172-1.44-.653-.086-.498.422-.997 1.122-1.126.714-.123 1.354.17 1.444.663zm0 0"></path>
      </g>
    </svg>
  );
};

const Codepen = ({ ...props }: SVGProps<SVGSVGElement>) => {
  return (
    <svg viewBox="0 0 128 128" {...props}>
      <path
        d="M125.571 39.926l-58.5-39c-1.997-1.23-4.128-1.24-6.142 0l-58.5 39C.929 40.926 0 42.712 0 44.497v39c0 1.786.929 3.572 2.429 4.571l58.5 39.006c1.996 1.229 4.128 1.24 6.142 0l58.5-39.006c1.5-.999 2.429-2.785 2.429-4.57v-39c0-1.786-.929-3.572-2.429-4.572zm-56.07-24.144l43.07 28.715-19.214 12.858L69.5 41.425V15.784zm-11.001 0v25.644L34.642 57.354 15.428 44.498 58.5 15.782zm-47.5 39l13.786 9.215L11 73.212v-18.43zm47.5 57.43L15.428 83.497 34.642 70.64 58.5 86.569v25.643zM64 76.997l-19.428-13 19.428-13 19.428 13-19.428 13zm5.5 35.215V86.569L93.357 70.64l19.214 12.857-43.07 28.715zm47.5-39l-13.786-9.215L117 54.783v18.429z"
        fill="currentColor"></path>
    </svg>
  );
};
const Linkedin = ({ ...props }: SVGProps<SVGSVGElement>) => {
  return (
    <svg viewBox="0 0 128 128" {...props}>
      <path d="M116 3H12a8.91 8.91 0 00-9 8.8v104.42a8.91 8.91 0 009 8.78h104a8.93 8.93 0 009-8.81V11.77A8.93 8.93 0 00116 3zM39.17 107H21.06V48.73h18.11zm-9-66.21a10.5 10.5 0 1110.49-10.5 10.5 10.5 0 01-10.54 10.48zM107 107H88.89V78.65c0-6.75-.12-15.44-9.41-15.44s-10.87 7.36-10.87 15V107H50.53V48.73h17.36v8h.24c2.42-4.58 8.32-9.41 17.13-9.41C103.6 47.28 107 59.35 107 75z"></path>
    </svg>
  );
};

const Document = ({ ...props }: SVGProps<SVGSVGElement>) => {
  return (
    <svg {...props} xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
      <title>Document Text</title>
      <path
        d="M416 221.25V416a48 48 0 01-48 48H144a48 48 0 01-48-48V96a48 48 0 0148-48h98.75a32 32 0 0122.62 9.37l141.26 141.26a32 32 0 019.37 22.62z"
        fill="none"
        stroke="currentColor"
        strokeLinejoin="round"
        strokeWidth="32"
      />
      <path
        d="M256 56v120a32 32 0 0032 32h120M176 288h160M176 368h160"
        fill="none"
        stroke="currentColor"
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth="32"
      />
    </svg>
  );
};

const GitHub = ({ ...props }: SVGProps<SVGSVGElement>) => {
  return (
    <svg
      {...props}
      viewBox="0 0 14 14"
      fill="none"
      xmlns="http://www.w3.org/2000/svg">
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M7 0.901255C3.46792 0.901255 0.608417 3.74617 0.608417 7.24967C0.608417 9.82217 2.15017 12.0359 4.36917 13.0317C4.60133 13.1361 4.82825 13.0947 5.00558 12.9617C5.10365 12.8853 5.18271 12.7873 5.23655 12.6752C5.29039 12.5632 5.31755 12.4402 5.31592 12.3159V11.9834L4.52433 11.8761C4.51847 11.8753 4.51263 11.8743 4.50683 11.8732C4.0705 11.788 3.77592 11.6346 3.56008 11.4135C3.37867 11.2274 3.26783 11.0046 3.17392 10.8156L3.14125 10.7497C3.05445 10.5686 2.95966 10.3915 2.85717 10.2188C2.77842 10.094 2.71717 10.0298 2.6565 9.98959C2.5025 9.8875 2.35433 9.71425 2.35433 9.49784C2.35381 9.43555 2.36714 9.37392 2.39337 9.31742C2.41961 9.26092 2.45808 9.21097 2.506 9.17117C2.59645 9.09956 2.70917 9.06198 2.8245 9.065C2.954 9.065 3.07592 9.10467 3.17742 9.15017C3.28125 9.19684 3.3845 9.25867 3.48075 9.32284C3.71525 9.47917 3.94625 9.66409 4.14167 9.89217C4.34525 10.129 4.48933 10.2795 4.70633 10.3104C4.88483 10.3361 5.06683 10.3367 5.20858 10.3303C5.22828 10.218 5.26077 10.1084 5.30542 10.0036C5.13229 9.96319 4.96151 9.91333 4.79383 9.85425C4.41233 9.71892 3.98708 9.50834 3.70125 9.18925C3.38742 8.83809 3.19317 8.52484 3.08467 8.1585C2.97908 7.80151 2.96158 7.41475 2.96158 6.93876C2.96158 6.20959 3.27717 5.59534 3.514 5.26925C3.42301 4.98377 3.35761 4.69075 3.31858 4.39367C3.29274 4.20632 3.29293 4.0163 3.31917 3.82901C3.34833 3.65809 3.42125 3.44809 3.61317 3.3215C3.79808 3.19842 4.01508 3.20367 4.18425 3.23517C4.35983 3.26842 4.54242 3.34134 4.71042 3.42475C4.984 3.56009 5.25583 3.74092 5.45942 3.89434C5.81058 3.79109 6.43183 3.65809 6.99358 3.64584H7.00642C7.56875 3.65809 8.162 3.79109 8.50442 3.89375C8.70858 3.74092 8.97983 3.5595 9.25283 3.42475C9.42083 3.34134 9.60283 3.26842 9.779 3.23517C9.94817 3.20367 10.1652 3.19842 10.3507 3.32092C10.542 3.44809 10.6155 3.65809 10.6441 3.82901C10.6738 4.00692 10.6668 4.20584 10.6441 4.39367C10.6052 4.69073 10.54 4.98375 10.4492 5.26925C10.6861 5.59592 11.0017 6.21017 11.0017 6.93876C11.0017 7.41475 10.9842 7.8015 10.8792 8.15792C10.7701 8.52542 10.5758 8.83809 10.262 9.18925C9.97617 9.50834 9.55092 9.71892 9.16942 9.85425C8.96691 9.92543 8.75997 9.9833 8.54992 10.0275C8.62167 10.2445 8.64733 10.4201 8.64733 10.521V12.3235C8.64733 12.5977 8.77508 12.8316 8.9565 12.9681C9.13267 13.1017 9.359 13.1431 9.59117 13.0416C11.8312 12.0546 13.391 9.835 13.391 7.24909C13.391 3.74617 10.5327 0.901255 7 0.901255ZM5.52767 10.9142C5.376 10.9358 5.52708 10.9142 5.52708 10.9142H5.52533L5.52067 10.9153L5.50375 10.9177C5.41711 10.9279 5.33014 10.9351 5.243 10.9393C5.03539 10.9501 4.82723 10.9417 4.62117 10.9142C4.15975 10.8488 3.87917 10.5222 3.69775 10.3098L3.68025 10.29C3.62093 10.2212 3.55722 10.1563 3.4895 10.0958C3.54958 10.2066 3.612 10.3303 3.67908 10.4633L3.68492 10.4749L3.71467 10.5356C3.81675 10.7386 3.88383 10.8739 3.99525 10.9871C4.10375 11.0979 4.27292 11.2053 4.61475 11.2729L5.66125 11.4147C5.73434 11.4246 5.80136 11.4606 5.84985 11.5162C5.89834 11.5718 5.92502 11.6431 5.92492 11.7168V12.3159C5.92492 12.7826 5.70617 13.1985 5.37075 13.4505C5.19465 13.5851 4.98516 13.669 4.76486 13.6933C4.54457 13.7175 4.32183 13.6812 4.12067 13.5882C1.69283 12.4991 0 10.0742 0 7.24967C0 3.40434 3.13658 0.291672 7 0.291672C10.8634 0.291672 14 3.40434 14 7.24967C14 10.0888 12.2856 12.5201 9.83675 13.5998C9.63542 13.6911 9.41307 13.7259 9.1935 13.7005C8.97392 13.6751 8.76537 13.5905 8.59017 13.4558C8.41693 13.3224 8.27695 13.1507 8.18121 12.9541C8.08546 12.7576 8.03656 12.5415 8.03833 12.3229V10.5204C8.03833 10.4796 8.00975 10.2439 7.8505 9.92717C7.82852 9.88325 7.81744 9.83468 7.81822 9.78557C7.81899 9.73646 7.83158 9.68826 7.85493 9.64505C7.87828 9.60184 7.9117 9.56489 7.95236 9.53734C7.99302 9.50979 8.03971 9.49243 8.0885 9.48676C8.38756 9.44927 8.6817 9.37965 8.96583 9.27909C9.31233 9.15659 9.62325 8.98859 9.80817 8.78209C10.0829 8.47526 10.22 8.23959 10.2952 7.98467C10.3734 7.72042 10.3932 7.41301 10.3932 6.93876C10.3932 6.27317 10.0433 5.71376 9.88225 5.5335C9.8457 5.49277 9.82079 5.44295 9.81011 5.38928C9.79944 5.3356 9.8034 5.28004 9.82158 5.22842C9.92527 4.93452 9.99857 4.63077 10.0403 4.32192C10.059 4.1615 10.0602 4.02734 10.0438 3.9305C10.0402 3.8951 10.0295 3.86079 10.0123 3.82959C9.97217 3.82264 9.93099 3.82443 9.89158 3.83484C9.79242 3.8535 9.66583 3.90017 9.52233 3.97134C9.2365 4.1125 8.939 4.32134 8.75467 4.47067C8.71402 4.50365 8.66552 4.52555 8.6139 4.53424C8.56228 4.54293 8.50929 4.53811 8.46008 4.52026C7.98778 4.36576 7.49649 4.27684 7 4.25601C6.41258 4.27 5.73475 4.43684 5.50317 4.52026C5.45396 4.53811 5.40097 4.54293 5.34935 4.53424C5.29773 4.52555 5.24923 4.50365 5.20858 4.47067C4.9702 4.27875 4.713 4.11146 4.44092 3.97134C4.32408 3.90998 4.19976 3.8641 4.07108 3.83484C4.03186 3.82451 3.99089 3.82272 3.95092 3.82959C3.93377 3.86078 3.92306 3.8951 3.91942 3.9305C3.90308 4.02734 3.90425 4.1615 3.92292 4.32192C3.96495 4.63071 4.03825 4.93444 4.14167 5.22842C4.17842 5.33342 4.15567 5.45009 4.081 5.5335C3.92 5.71376 3.57 6.27317 3.57 6.93876C3.57 7.41242 3.58983 7.72042 3.668 7.98467C3.74383 8.23959 3.88033 8.47467 4.1545 8.78209C4.34 8.98859 4.65033 9.15659 4.99742 9.27909C5.28137 9.37957 5.57531 9.4492 5.87417 9.48676C5.93565 9.49335 5.99367 9.51852 6.04051 9.5589C6.08734 9.59928 6.12077 9.65296 6.13635 9.71281C6.15193 9.77265 6.14892 9.83582 6.12772 9.89391C6.10652 9.952 6.06813 10.0023 6.01767 10.038C5.92142 10.1068 5.85783 10.2305 5.82225 10.3734C5.80388 10.447 5.79293 10.5222 5.78958 10.598V10.6091C5.79033 10.683 5.76418 10.7548 5.716 10.8109C5.66782 10.867 5.60089 10.9037 5.52767 10.9142Z"
      />
    </svg>
  );
};

const Moon = ({ ...props }: SVGProps<SVGSVGElement>) => {
  return (
    <svg {...props} xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
      <title>Moon</title>
      <path
        d="M160 136c0-30.62 4.51-61.61 16-88C99.57 81.27 48 159.32 48 248c0 119.29 96.71 216 216 216 88.68 0 166.73-51.57 200-128-26.39 11.49-57.38 16-88 16-119.29 0-216-96.71-216-216z"
        fill="none"
        stroke="currentColor"
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth="32"
      />
    </svg>
  );
};

const Sun = ({ ...props }: SVGProps<SVGSVGElement>) => {
  return (
    <svg {...props} xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
      <title>Sunny</title>
      <path
        fill="none"
        stroke="currentColor"
        strokeLinecap="round"
        strokeMiterlimit="10"
        strokeWidth="32"
        d="M256 48v48M256 416v48M403.08 108.92l-33.94 33.94M142.86 369.14l-33.94 33.94M464 256h-48M96 256H48M403.08 403.08l-33.94-33.94M142.86 142.86l-33.94-33.94"
      />
      <circle
        cx="256"
        cy="256"
        r="80"
        fill="none"
        stroke="currentColor"
        strokeLinecap="round"
        strokeMiterlimit="10"
        strokeWidth="32"
      />
    </svg>
  );
};

const CaretRight = ({ ...props }: SVGProps<SVGSVGElement>) => {
  return (
    <svg {...props} xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
      <title>Caret Forward</title>
      <path d="M190.06 414l163.12-139.78a24 24 0 000-36.44L190.06 98c-15.57-13.34-39.62-2.28-39.62 18.22v279.6c0 20.5 24.05 31.56 39.62 18.18z" />
    </svg>
  );
};

const Code = ({ ...props }: SVGProps<SVGSVGElement>) => {
  return (
    <svg {...props} xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
      <title>Code Slash</title>
      <path
        fill="none"
        stroke="currentColor"
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth="32"
        d="M160 368L32 256l128-112M352 368l128-112-128-112M304 96l-96 320"
      />
    </svg>
  );
};

const map: { [key in IconName]: FC<SVGProps<SVGSVGElement>> } = {
  document: Document,
  github: GitHub,
  moon: Moon,
  sun: Sun,
  "caret-right": CaretRight,
  code: Code,
  codepen: Codepen,
  linkedin: Linkedin,
  "github-filled": GithubFilled,
};

type Props = {
  name: IconName;
  color?: Color;
  size?: number;
} & SVGProps<SVGSVGElement>;

const Icon = ({
  name,
  color = "text",
  style,
  className,
  size = 16,
  ...props
}: Props) => {
  const Icon = map[name];
  const _color = useGetColor(color);
  return (
    <Icon
      {...props}
      style={{
        color: _color,
        fill: _color,
        height: size,
        width: size,
        ...style,
      }}
      className={classNames(styles.icon, className)}
    />
  );
};

export default Icon;
